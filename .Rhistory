data(Titanic)
Titanic
summary(Titanic)
Titanic
library("knitr", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
data(Titanic)
Titanic
data()
Titanic[1]
```{r echo=FALSE}
summay(Orange)
summary(Orange)
data(Orange)
Orange
View(Orange)
subset?
help(subset)
subset ?
subset?
?subset
?subset
We are now moving to consider just a specific subset, let's consider Tree1, we use this function in R `r subset(Orange, Tree==1, select = c(age, circumference))`
subset(Orange, Tree==1, select = c(age, circumference)
Ã¹
subset(Orange, Tree==1, select = c(age, circumference)
subset(Orange, Tree==1, select = c(age, circumference))
?hist
View(Orange)
data(Orange)
hist(Orange)
?hist
hist(Orange$age)
?scatter
?plot
plot(x = age, y = circumference)
plot(x = Orange$age, y = Orange$circumference)
library("knitr", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
library("httr", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
library("knitr", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
library("dplyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
library(XML)
library("stringr", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
url <- http://www.bbc.com/sport/winter-olympics/2014/medals/countries
url <- "http://www.bbc.com/sport/winter-olympics/2014/medals/countries"
url
read.table(url)
read.csv(url)
############
table <- GET(url)
table
table <- url %>% GET() %>% content(as = 'parsed') %>% readHTMLtable()
install.packages("XML")
table <- url %>% GET() %>% content(as = 'parsed') %>% readHTMLtable()
table <- url %>% GET() %>% content(as = 'parsed') %>% readHTMLtable()
table <- url %>% GET() %>% content(as = 'parsed') %>% readHTMLTable()
table <- url %>% GET() %>% content(as = 'parsed') %>% readHTMLtable()
table <- url %>% GET() %>% content(as = 'parsed') %>% read.table()
library(XML)
table <- url %>% GET() %>% content(as = 'parsed') %>% readHTMLtable()
table <- url %>% GET() %>% content(as = 'parsed') %>% readHTMLTable()
table
head(table)
subset?
subset(?)
help(subset)
essentialtable <- subset(table, select = c(V1,V2,V3,V4,V5,V6))
smaller_table <- subset(table, select = c(V1,V2,V3,V4,V5,V6) )
smaller_table <- subset(table, subset, select = c(V1,V2,V3,V4,V5,V6) )
url <- http://www.istat.it/it/files/2012/08/nota-informativa-SUICIDI.pdf
url <- "http://www.istat.it/it/files/2012/08/nota-informativa-SUICIDI.pdf"
library("devtools", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
library("rsdmx", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
install_github("opensdmx")
install_github("rsdmx", "opensdmx")
setwd("~/Desktop/Hertie/1st Semester/Collaborative Social Science Data Analysis/FinalAssignment/")
install.packages("devtools")
require("devtools")
install_github("rsdmx", "opensdmx")
library("rsdmx")
library(knitr)
library(plyr)
library(ggplot2)
meteo <- read.csv("meteo.csv", header = TRUE, sep = ";", dec = ",",fill = TRUE)
gdp <- read.csv("gdp.csv", header = T, sep =";", dec = ",", fill = T)
main_dataframe <- read.csv("main_dataset.csv", header = T, sep =";", dec = ",", fill = T)
View(gdp)
View(main_dataframe)
main <- read.csv("main_dataset.csv", header = T, sep =";", dec = ",", fill = T)
main <- read.csv("main_dataset.csv", header = T, sep =";", dec = ",", fill = T)
View(main)
Merging1 <- merge(x = main, y = gdp, union("county"), all = T )
gdp <- read.csv("gdp.csv", header = T, sep =";", dec = ",", fill = T)
Merging1 <- merge(x = main, y = gdp, union("county"), all = T )
View(gdp)
hel(merge)
help(merge)
Merging1 <- merge(x = main, y = meteo, union("county"), all = T )
meteo <- read.csv("meteo.csv", header = TRUE, sep = ";", dec = ",",fill = TRUE)
gdp <- read.csv("gdp.csv", header = T, sep =";", dec = ",", fill = T)
main <- read.csv("main_dataset.csv", header = T, sep =";", dec = ",", fill = T)
# Merging
Merging1 <- merge(x = main , y = meteo , union("county"), all = T )
library("dplyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
Merging1 <- dplyr :: merge(x = main , y = meteo , union("county"), all = T )
Merging1 <- merge(x = main , y = meteo , union("county"), all = T )
Merging1 <- merge(x = main , y = "meteo" , union("county"), all = T )
help(as.vector)
Merging1 <- merge(x = main , y = meteo , union("county"), all = T )
Merging1 <- merge(x = meteo , y = main , union("county"), all = T )
View(meteo)
View(main)
meteo <- read.csv("meteo.csv", header = TRUE, sep = ";", dec = ",",fill = TRUE)
gdp <- read.csv("gdp.csv", header = T, sep =";", dec = ",", fill = T)
main <- read.csv("main_dataset.csv", header = T, sep =";", dec = ",", fill = T)
# Merging
library(dplyr)
Merging1 <- merge(x = main , y = meteo , union("county"), all = T )
Dataset <- merge(x = Merging1, y = gdp, union("county"), all = T )
help(merge)
as.character("main$county")
View(main_dataframe)
View(meteo)
View(gdp)
meteo <- read.csv("meteo.csv", header = TRUE, sep = ";", dec = ",",fill = TRUE)
gdp <- read.csv("gdp.csv", header = T, sep =";", dec = ",", fill = T)
main <- read.csv("main_dataset.csv", header = T, sep =";", dec = ",", fill = T)
# Merging
library(dplyr)
Merging1 <- merge(x = main , y = meteo , union("county"), all = T )
View(main)
View(meteo)
MergedData1 <- merge(x = weather, y = gdp, by("macro_area", "year"), all = T )
Merging1 <- merge(x = main , y = meteo , by("county"), all = T )
class(main$county)
class(metro$county)
class(meteo$county)
Merging1 <- merge(x = main , y = meteo , by = "county", all = T )
View(Merging1)
Dataset <- merge(x = Merging1, y = gdp, by = "county", all = T )
View(meteo)
View(Dataset)
View(Dataset)
summary(Dataset)
as.numbers(Dataset$gdp_pro_capita)
as.numbers''
as.numbers??
??as.numbers
help(as.character)
??as.number
??numbers
class(number)
help(stargazer)
library(stargazer)
install.packages("stargazer")
library(stargazer)
help(stargazer)
stargazer(Dataset, summary = T, title = "Data Description", digitis = 2, type = html, header = F)
library(stargazer)
stargazer(Dataset, summary = T, title = "Data Description", digitis = 2, type = html, header = F)
stargazer(Dataset, summary = T, title = "Data Description", digitis = 2, type = "html", header = F)
stargazer(Dataset[,] , summary = T, title = "Data Description", digitis = 2, type = "html", header = F)
View(Dataset)
LinModel <- lm(st_suicide_rate ~ gdp_per_capita + unemployment_rate + population + gini_index + avg_temperature + avg_temp_range + avg_precipitations, data = Dataset)
LinModel <- lm(st_suicide_rate ~ gdp_pro_capita + unemployment_rate + population + gini_index + avg_temperature + avg_temp_range + avg_precipitations, data = Dataset)
LinModel1 <- lm(st_suicide_rate ~ gdp_pro_capita + unemployment_rate + population + gini_index + avg_temperature + avg_temp_range + avg_precipitations, data = Dataset)
library(xtable)
Model1Table <- xtable(LinModel, digits=2)
print.xtable(Model1Table, comment = F)
summary(LinModel1)
LinModel2 <- lm(st_suicide_rate ~ gdp_pro_capita + unemployment_rate + population + avg_temperature + avg_precipitations, data = Dataset)
summary(LinModel2)
Confint <- confint(LinModel2)
kable(Confint, caption = "Confidence Interval for the latter linear model")
View(Confint)
help(plot)
help(kable)
View(Confint)
help(xtable)
library(xtable)
xtable :: xtable(LinModel1, label = "HTML", caption = "First Model Estimation", digits=2, comment = F)
View(gdp)
LinModel1 <- lm(st_suicide_rate ~ log(gdp_pro_capita) + unemployment_rate + log(population) + gini_index + log(avg_temperature) + log(avg_temp_range) + log(avg_precipitations), data = Dataset)
summary(LinModel1)
meteo <- read.csv("meteo.csv", header = TRUE, sep = ";", dec = ",",fill = TRUE)
gdp <- read.csv("gdp.csv", header = T, sep =";", dec = ",", fill = T)
main <- read.csv("main_dataset.csv", header = T, sep =";", dec = ",", fill = T)
# Merging
library(dplyr)
Merging1 <- merge(x = main , y = meteo , by = "county", all = T )
Dataset <- merge(x = Merging1, y = gdp, by = "county", all = T )
View(Dataset)
LinModel2 <- lm(st_suicide_rate ~ gdp_per_capita + unemployment_rate + log(population) + avg_temperature + avg_precipitations, data = Dataset)
LinModel1 <- lm(st_suicide_rate ~ gdp_per_capita + unemployment_rate + log(population) + gini_index + avg_temperature + avg_temp_range + avg_precipitations, data = Dataset)
summary(LinModel1)
LinModel2 <- lm(st_suicide_rate ~ gdp_per_capita + unemployment_rate + log(population) + avg_temperature + avg_precipitations, data = Dataset)
summary(LinModel2)
help(stargazer)
help(kable)
plot(LinModel2, which = 2)
car::scatterplotMatrix(Dataset[2,3,5,6,7,9])
View(Dataset)
car::scatterplotMatrix(LinModel2)
ggplot2::ggplot(data = Dataset, aes(x = avg_precipitations, y = st_suicide_rate)) + geom_point()
ggplot2::ggplot(data = Dataset, aes(x = log(avg_precipitations), y = st_suicide_rate)) + geom_point()
ggplot2::ggplot(data = Dataset, aes(x = log(avg_precipitations), y = log(st_suicide_rate))) + geom_point()
ggplot2::ggplot(data = Dataset, aes(x = log(population), y = st_suicide_rate)) + geom_point()
help(ggplot)
ggplot2::ggplot(data = Dataset, aes(x = avg_precipitations, y = st_suicide_rate)) + geom_point() + theme_bw() + ggtitle("Suicide Rate vs Precipitation in Italy")
ggplot2::ggplot(data = Dataset, aes(x = avg_precipitations, y = st_suicide_rate)) + geom_point() + theme_bw() + ggtitle("Suicide Rate vs Precipitation in Italy" + geom_abline())
ggplot2::ggplot(data = Dataset, aes(x = avg_precipitations, y = st_suicide_rate)) + geom_point() + theme_bw() + ggtitle("Suicide Rate vs Precipitation in Italy")
coef(lm(st_suicide_rate ~ avg_precipitations))
coef(lm(st_suicide_rate ~ avg_precipitations, data = Dataset))
ggplot2::ggplot(data = Dataset, aes(x = avg_precipitations, y = st_suicide_rate)) + geom_point() + theme_bw() + ggtitle("Suicide Rate vs Precipitation in Italy" + geom_abline(intercept = 11, slope = 0,005))
ggplot2::ggplot(data = Dataset, aes(x = avg_precipitations, y = st_suicide_rate)) + geom_point() + theme_bw() + ggtitle("Suicide Rate vs Precipitation in Italy" + geom_abline (intercept = 11, slope = 0,005))
ggplot2::ggplot(data = Dataset, aes(x = avg_precipitations, y = st_suicide_rate)) + geom_point() + theme_bw() + ggtitle("Suicide Rate vs Precipitation in Italy"))
ggplot2::ggplot(data = Dataset, aes(x = avg_precipitations, y = st_suicide_rate)) + geom_point() + theme_bw() + ggtitle("Suicide Rate vs Precipitation in Italy")
help(plot)
plot(type = "b", x = Dataset$avg_precipitations, y = Dataset$st_suicide_rate, main = "Suicides vs Precipitations in Italy") theme_bw()
plot(type = "b", x = Dataset$avg_precipitations, y = Dataset$st_suicide_rate, main = "Suicides vs Precipitations in Italy") + theme_bw()
help(plot)
plot(type = "p", x = Dataset$avg_precipitations, y = Dataset$st_suicide_rate, main = "Suicides vs Precipitations in Italy") + theme_bw()
plot(type = "l", x = Dataset$avg_precipitations, y = Dataset$st_suicide_rate, main = "Suicides vs Precipitations in Italy") + theme_bw()
ggplot2::ggplot(data = Dataset, aes(x = avg_precipitations, y = st_suicide_rate)) + geom_point() + theme_bw() + ggtitle("Suicide Rate vs Precipitation in Italy")
plot(type = "o", x = Dataset$avg_precipitations, y = Dataset$st_suicide_rate, main = "Suicides vs Precipitations in Italy") + theme_bw()
plot(type = "c", x = Dataset$avg_precipitations, y = Dataset$st_suicide_rate, main = "Suicides vs Precipitations in Italy") + theme_bw()
plot(type = "h", x = Dataset$avg_precipitations, y = Dataset$st_suicide_rate, main = "Suicides vs Precipitations in Italy") + theme_bw()
ggplot2::ggplot(data = Dataset, aes(x = avg_precipitations, y = st_suicide_rate), message = F) + geom_point() + stat_smooth() + theme_bw() + ggtitle("Suicide Rate vs Precipitation in Italy")
stargazer(LinModel1, title = "Estimation of the First Model", digits = 3, type = "html", header = F, comment = F)
help(plot)
meteo <- read.csv("climate_data.csv", header = TRUE, sep = ";", dec = ",",fill = TRUE)
gdp <- read.csv("gdp_data.csv", header = T, sep =";", dec = ",", fill = T)
main <- read.csv("socio_eco_data.csv", header = T, sep =";", dec = ",", fill = T)
# Merging
library(dplyr)
Merging1 <- merge(x = main , y = meteo , by = "county", all = T )
Dataset <- merge(x = Merging1, y = gdp, by = "county", all = T )
View(Dataset)
